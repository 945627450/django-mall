# -*- coding: utf-8 -*-
# Generated by Django 1.11.18 on 2019-02-27 05:44
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('nickname', models.CharField(blank=True, max_length=30, null=True, verbose_name='昵称')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='上次登录时间')),
                ('avatar', models.ImageField(blank=True, upload_to='%Y%m/avatar', verbose_name='个人头像')),
                ('status', models.SmallIntegerField(choices=[(0, '删除'), (1, '正常')], default=1, verbose_name='用户状态')),
                ('integral', models.IntegerField(default=0, verbose_name='积分')),
                ('level', models.IntegerField(choices=[(0, '普通会员'), (1, '青铜会员'), (2, '白银会员'), (3, '黄金会员'), (4, '铂金会员'), (5, '钻石会员')], default=0, verbose_name='用户等级')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户基础信息',
                'verbose_name_plural': '用户基础信息',
                'db_table': 'accounts_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ChangePasswdLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=40, verbose_name='密码')),
                ('source', models.CharField(blank=True, choices=[('android', '安卓客户端'), ('ios', '苹果客户端'), ('wechat_app', '微信APP'), ('qq_app', 'QQ APP'), ('alipay_app', '支付宝APP'), ('web', 'Web浏览器')], max_length=30, null=True, verbose_name='来源')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ope_logs', to=settings.AUTH_USER_MODEL, verbose_name='操作人')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_pwd_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '密码改变历史记录',
                'verbose_name_plural': '密码改变历史记录',
                'db_table': 'accounts_password_log',
            },
        ),
        migrations.CreateModel(
            name='LoginRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_index=True, max_length=32, verbose_name='登陆账号')),
                ('ip', models.CharField(blank=True, max_length=32, null=True, verbose_name='IP地址')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='地址')),
                ('source', models.CharField(blank=True, choices=[('android', '安卓客户端'), ('ios', '苹果客户端'), ('wechat_app', '微信APP'), ('qq_app', 'QQ APP'), ('alipay_app', '支付宝APP'), ('web', 'Web浏览器')], max_length=30, null=True, verbose_name='来源')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登录时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_login_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '登录信息',
                'verbose_name_plural': '登录信息',
                'db_table': 'accounts_login_record',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LoginThird',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_type', models.SmallIntegerField(choices=[(5, 'QQ客户端'), (6, '微信客户端')], verbose_name='登录方式')),
                ('name', models.CharField(db_index=True, max_length=64, verbose_name='登录账号')),
                ('device', models.CharField(blank=True, max_length=64, null=True, verbose_name='设备型号')),
                ('is_bind', models.BooleanField(default=True, verbose_name='是否已经绑定')),
                ('is_valid', models.BooleanField(default=True, verbose_name='是否有效')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='用户创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='最后登陆时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='third_login', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '第三方登录信息',
                'verbose_name_plural': '第三方登录信息',
                'db_table': 'accounts_login_third',
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province', models.CharField(max_length=32, verbose_name='省份')),
                ('city', models.CharField(max_length=32, verbose_name='市区')),
                ('area', models.CharField(max_length=32, verbose_name='区域')),
                ('town', models.CharField(blank=True, max_length=32, null=True, verbose_name='街道')),
                ('address', models.CharField(max_length=64, verbose_name='详细地址')),
                ('username', models.CharField(max_length=32, verbose_name='收货人')),
                ('phone', models.CharField(max_length=32, verbose_name='手机号')),
                ('is_default', models.BooleanField(default=False, verbose_name='是否为默认地址')),
                ('is_valid', models.BooleanField(default=True, verbose_name='是否有效')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_addrs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户地址',
                'verbose_name_plural': '用户地址',
                'db_table': 'accounts_user_address',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_index=True, max_length=40, unique=True, verbose_name='用户名')),
                ('is_verified', models.BooleanField(default=False, verbose_name='是否已通过验证')),
                ('real_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='真实姓名')),
                ('invite_code', models.CharField(blank=True, max_length=16, null=True, verbose_name='邀请码')),
                ('mobile_no', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号码')),
                ('is_mobile_no_verified', models.BooleanField(default=False, verbose_name='手机号是否已验证')),
                ('signature', models.CharField(blank=True, max_length=255, null=True, verbose_name='个性签名')),
                ('user_type', models.SmallIntegerField(choices=[(1, '普通用户'), (2, '渠道')], default=1, verbose_name='用户类型')),
                ('province', models.CharField(blank=True, max_length=64, null=True, verbose_name='省份')),
                ('city', models.CharField(blank=True, max_length=64, null=True, verbose_name='城市')),
                ('gender', models.SmallIntegerField(blank=True, choices=[(1, '男'), (2, '女')], null=True, verbose_name='性别')),
                ('birth', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('channel', models.CharField(blank=True, choices=[('web', '自主注册'), ('android', '安卓'), ('iphone', '苹果')], max_length=100, null=True, verbose_name='渠道')),
                ('source', models.CharField(blank=True, choices=[('android', '安卓客户端'), ('ios', '苹果客户端'), ('wechat_app', '微信APP'), ('qq_app', 'QQ APP'), ('alipay_app', '支付宝APP'), ('web', 'Web浏览器')], max_length=32, null=True, verbose_name='当前使用客户端来源')),
                ('version', models.CharField(blank=True, max_length=100, null=True, verbose_name='客户端版本')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户详细信息',
                'verbose_name_plural': '用户详细信息',
                'db_table': 'accounts_user_profile',
            },
        ),
    ]
